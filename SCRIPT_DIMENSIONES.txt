====SCRIPT LLENADO DIMENSIONES ===



--LLENADO DE DIMENSIONES DESDE BASE DATOS TRANSACCIONAL


-- LLENADO DIMENSION CLIENTE: SCRIPT

MERGE [DATAMART_DELTRON_BD].[dbo].[DIM_CLIENTE] AS DIM USING
(
SELECT TIPO.Descripcion AS TIPOCLIENTE,dbo.ClasificacionCliente(CLI.CodCliente) as CLASIFICACION,dbo.MostrarNombreClienteFuncion(CLI.CodCliente) as NOMBRE,CLI.CodCliente AS idCliente 
FROM CLIENTE CLI INNER JOIN TipoCliente TIPO
ON CLI.CodTipoCliente=TIPO.CodTipoCliente
) AS OLTP ON DIM.idCliente=OLTP.idCliente
WHEN NOT MATCHED THEN
	INSERT(TIPOCLIENTE,CLASIFICACION,CLIENTE,IDCLIENTE)--<--DATAMART
	VALUES(TIPOCLIENTE,CLASIFICACION,NOMBRE,IDCLIENTE);--<-- TRANSACCIONAL






-- LLENADO DIMENSION TIEMPO: SCRIPT

MERGE [DATAMART_DELTRON_BD].[dbo].[DIM_TIEMPO] AS DIM USING
(
SELECT YEAR(FechaPedido) AS AÑO,DATEPART(Q,FechaPedido)AS TRIMESTRE,DATENAME(M,FechaPedido) AS MES ,MONTH(FechaPedido) as NroMes,CAST(FechaPedido AS DATE) IDFECHA
FROM PEDIDO ) AS OLTP ON DIM.IDFECHA=OLTP.IDFECHA
WHEN NOT MATCHED THEN
	INSERT(AÑO,TRIMESTRE,MES,NroMes,IDFECHA)--<--DATAMART
	VALUES(AÑO,TRIMESTRE,MES,NroMes,IDFECHA);--<--TRANSACCIONAL




--LLENADO DIMENSION PRODUCTO: SCRIPT

MERGE [DATAMART_DELTRON_BD].[dbo].[DIM_PRODUCTO] AS DIM USING
(
SELECT MAR.Descripcion AS MARCA,FAM.Tipo AS FAMILIAPRODUCTO,PROD.Descripcion AS PRODUCTO,PROD.CodProducto AS IDPRODUCTO
FROM PRODUCTO PROD INNER JOIN FamiliaProducto FAM 
ON FAM.CodFamiliaProducto=PROD.CodFamiliaProducto
INNER JOIN MARCA MAR ON MAR.CodMarca=PROD.CodMarca) AS OLTP ON DIM.IDPRODUCTO=OLTP.IDPRODUCTO
WHEN NOT MATCHED THEN
	INSERT(MARCA,FAMILIAPRODUCTO,PRODUCTO,IDPRODUCTO)--<--DATAMART
	VALUES(MARCA,FAMILIAPRODUCTO,PRODUCTO,IDPRODUCTO);--<--TRANSACCIONAL






--LLENADO DIMENSION PROMOCION: SCRIPT

MERGE [DATAMART_DELTRON_BD].[dbo].[DIM_PROMOCION] AS DIM USING
(
SELECT NombrePromocion AS PROMOCION,CodPromocion AS IDPROMOCION
FROM PROMOCION) AS OLTP ON DIM.IDPROMOCION=OLTP.IDPROMOCION
WHEN NOT MATCHED THEN
	INSERT(PROMOCION,IDPROMOCION)--<--DATAMART
	VALUES(PROMOCION,IDPROMOCION);--<--TRANSACCIONAL






--LLENADO DIMENSION ORGANIZACION

MERGE [DATAMART_DELTRON_BD].[dbo].[DIM_ORGANIZACION] AS DIM USING
(
SELECT PROV.Nombre AS PROVINCIA,DESP.Nombre AS DESPACHO,DESP.CodDespacho AS IDDESPACHO
FROM DESPACHO DESP INNER JOIN DISTRITO DIST
ON DESP.CodDistrito=DIST.CodDistrito
INNER JOIN PROVINCIA PROV ON PROV.CodProvincia=DIST.CodProvincia
)AS OLTP ON DIM.IDDESPACHO=OLTP.IDDESPACHO
WHEN NOT MATCHED THEN
	INSERT(PROVINCIA,DESPACHO,IDDESPACHO)--<--DATAMART
	VALUES(PROVINCIA,DESPACHO,IDDESPACHO);--<--TRANSACCIONAL







--LLENADO DIMENSION FORMAPAGO: SCRIPT

MERGE [DATAMART_DELTRON_BD].[dbo].[DIM_FORMAPAGO] AS DIM USING
(
SELECT Descripcion AS FORMAPAGO,CodFormaPago AS IDFORMAPAGO
FROM FormaPago
) AS OLTP ON DIM.IDFORMAPAGO=OLTP.FORMAPAGO
WHEN NOT MATCHED THEN
	INSERT(FORMAPAGO,IDFORMAPAGO)--<--DATAMART
	VALUES(FORMAPAGO,IDFORMAPAGO);--<--TRANSACCIONAL




--LLENADO DIMENSION OPINIONES FACEBOOK: SCRIPT


MERGE [DATAMART_DELTRON_BD].DBO.DIM_OPINION AS DIM USING(
SELECT Clasificacion=CASE WHEN CAST(Sentimiento as decimal) between 0.5 and 1 THEN 'POSITIVA'
						WHEN CAST(Sentimiento as decimal)<=-0.5 then 'NEGATIVA'
						ELSE 'NEUTRA' END,
		idOpinion
FROM OPINION )AS OLTP
ON DIM.idOpinion=OLTP.idOpinion
WHEN NOT MATCHED THEN
 INSERT (Opinion,idOpinion)
 VALUES(Clasificacion,idOpinion);






